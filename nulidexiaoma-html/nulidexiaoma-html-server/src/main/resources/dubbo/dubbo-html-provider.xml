<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        ">

    <dubbo:application name="${dubbo.application.name}"/>
    <dubbo:registry protocol="zookeeper" address="${dubbo.registry.address}" id="htmlZookeeper"/>
    <dubbo:provider timeout="${dubbo.server.timeout}" protocol="dubbo" port="${dubbo.protocol.port}"
                    threads="500" payload="${dubbo.protocol.maxPayLoad}" registry="htmlZookeeper" id="htmlProvider"/>
    <!-- html测试服务提供者-->
    <dubbo:service interface="cn.wzl.nulidexiaoma.html.api.DubboProviderService" ref="dubboProviderServiceImpl"
                   provider="htmlProvider" protocol="dubbo" group="${dubbo.group}"/>
<!--
    &lt;!&ndash; html泛化调用服务&ndash;&gt;
    <bean id="genericService" class="cn.wzl.nulidexiaoma.service.impl.MyGenericServiceImpl" />
    <dubbo:service interface="cn.wzl.nulidexiaoma.html.api.BarService" ref="genericService"
                   provider="htmlProvider" protocol="dubbo" group="${dubbo.group}"/>
    &lt;!&ndash; html异步NIO调用服务&ndash;&gt;
    <dubbo:service interface="cn.wzl.nulidexiaoma.html.api.NIoDubboOfAsyncAService" ref="NIoDubboOfAsyncAServiceImpl"
                   provider="htmlProvider" protocol="dubbo" group="${dubbo.group}">
        <dubbo:method name="asyncA"  async="true"/>
    </dubbo:service>
    <dubbo:service interface="cn.wzl.nulidexiaoma.html.api.NIoDubboOfAsyncBService" ref="NIoDubboOfAsyncBServiceImpl"
                   provider="htmlProvider" protocol="dubbo" group="${dubbo.group}">
        <dubbo:method name="asyncB" async="true"/>
    </dubbo:service>
    &lt;!&ndash; html参数回调服务&ndash;&gt;
    <dubbo:service interface="cn.wzl.nulidexiaoma.html.api.CallBackService" ref="callBackServiceImpl" provider="htmlProvider"
                   protocol="dubbo" group="${dubbo.group}" callbacks="1000">
        <dubbo:method name="addListener">
            <dubbo:argument index="1" callback="true" />
            &lt;!&ndash;也可以通过指定类型的方式&ndash;&gt;
            &lt;!&ndash;<dubbo:argument type="com.demo.CallbackListener" callback="true" />&ndash;&gt;
        </dubbo:method>
    </dubbo:service>
    &lt;!&ndash; html事件通知服务&ndash;&gt;
    <dubbo:service interface="cn.wzl.nulidexiaoma.html.api.EventNotifyService" ref="eventNotifyServiceImpl" group="${dubbo.group}" provider="htmlProvider"
                   protocol="dubbo"/>

    &lt;!&ndash; html本地存根服务&ndash;&gt;
    <dubbo:service interface="cn.wzl.nulidexiaoma.html.api.SubService" ref="subServiceImpl"
                   group="${dubbo.group}" provider="htmlProvider" protocol="dubbo"
                   stub="cn.wzl.nulidexiaoma.service.impl.SubServiceStub"/>-->
    <!--html本地伪装服务-->
    <dubbo:service interface="cn.wzl.nulidexiaoma.html.api.MockService" ref="mockServiceImpl"
                   group="${dubbo.group}" provider="htmlProvider" protocol="dubbo"/>
</beans>