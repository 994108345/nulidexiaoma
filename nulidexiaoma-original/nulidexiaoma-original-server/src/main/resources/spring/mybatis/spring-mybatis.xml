<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 扫描service包下所有使用注解的类型 -->
    <context:component-scan base-package="cn.wzl.nulidexiaoma.service"/>

    <!-- 配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:spring/properties/jdbc.properties"/>

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}"/>
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
    </bean>

    <!-- 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描model包 使用别名 -->
       <!-- <propenumname="typeAliasesPackage" value="cn.wzl.nulidexiaoma.model"/>-->
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath*:cn/wzl/nulidexiaoma/original/dao/**/mapper/*.xml"/>
        <!-- 配置mybatis配置文件的位置,为了拿到typeHandler -->
        <property name="typeHandlers">
            <bean class="org.apache.ibatis.type.EnumOrdinalTypeHandler">
                <constructor-arg value="cn.wzl.nulidexiaoma.common.enums.SexEnum"></constructor-arg>
            </bean>
        </property>
        <!--加载mybatis配置文件-->
        <property name="configLocation" value="classpath:spring/mybatis/mybatis-config.xml"/>
    </bean>


    <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        &lt;!&ndash; 注入sqlSessionFactory &ndash;&gt;
        <propenumname="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        &lt;!&ndash; 给出需要扫描Dao接口包 &ndash;&gt;
        <propenumname="basePackage" value="cn.wzl.nulidexiaoma.dao"/>
    </bean>-->

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="localSqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
</beans>