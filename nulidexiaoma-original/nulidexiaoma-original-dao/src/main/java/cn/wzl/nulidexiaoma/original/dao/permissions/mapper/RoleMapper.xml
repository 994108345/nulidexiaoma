<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wzl.nulidexiaoma.original.dao.permissions.IRoleDao">
  <resultMap id="BaseResultMap" type="cn.wzl.nulidexiaoma.model.Role">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, ROLE_NAME
  </sql>
  <!--<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mb.model.Role">
    insert into role (ID, ROLE_NAME)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mb.model.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mb.model.Role">
    update role
    <set>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mb.model.Role">
    update role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.mb.model.Role">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, ROLE_NAME
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lstringring" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lstringring">
    delete from role
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mb.model.Role">
    insert into role (ID, ROLE_NAME)
    values (#{id,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mb.model.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mb.model.Role">
    update role
    <set>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mb.model.Role">
    update role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>-->
  <!--查询分页记录-->
  <select id="selectListByCondition" resultMap="BaseResultMap" >
    select * from Role
    where 1=1
    <if test="id != null">
      and ID = #{id,jdbcType=INTEGER}
    </if>
    <if test="roleId != null">
      and role_id = #{roleId,jdbcType=VARCHAR}
    </if>
    <if test="roleName != null">
      and ROLE_NAME=#{roleName,jdbcType=VARCHAR}
    </if>
    limit  ${start},${pageSize}
  </select>
  <!--查询记录总数-->
  <select id="selectCountByCondition" resultType="java.lang.Integer">
    select count(*) from Role
    where 1=1
    <if test="id != null">
      and ID = #{id,jdbcType=INTEGER}
    </if>
    <if test="roleName != null">
      and ROLE_NAME=#{roleName,jdbcType=VARCHAR}
    </if>
  </select>

  <!--删除单条-->
  <delete id="deleteOne">
    delete from role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>

  <!--批量插入-->
  <insert id="insertList" parameterType="cn.wzl.nulidexiaoma.model.Role">
    insert into role (ROLE_NAME)
    <foreach collection="list" item="item" index="index" separator="union all">
      ( select
      (#{roleName,jdbcType=VARCHAR})
      from dual)
    </foreach>
  </insert>

  <insert id="insertOne">
    insert into role (role_name,role_id,remark)
    values
    (#{roleName,jdbcType=VARCHAR},#{roleId,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR})
  </insert>

  <resultMap id="MenuMap" type="cn.wzl.nulidexiaoma.model.Menu" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="MENU_ID" property="menuId" jdbcType="VARCHAR" />
    <result column="MENU_NAME" property="menuName" jdbcType="VARCHAR" />
    <result column="LINK_URL" property="linkUrl" jdbcType="VARCHAR" />
    <result column="PARENT_ID" property="parentId" jdbcType="INTEGER" />
    <result column="ICON_NAME" property="iconName" jdbcType="VARCHAR" />
    <result column="SORTID" property="sortid" jdbcType="INTEGER" />
  </resultMap>

  <select id="listMenuByRoleId" resultMap="MenuMap">
    select u.* from role r
      left join role_menu m on r.role_id = m.ROLE_ID
      left join menu u on m.MENU_ID = u.MENU_ID
      where r.role_id = #{roleId,jdbcType=VARCHAR}
  </select>

  <update id="updateOne">
    update role
    SET
    <if test="roleName != null">
      ROLE_NAME = #{roleName,jdbcType=VARCHAR},
    </if>
    <if test="remark != null">
      remark = #{remark,jdbcType=VARCHAR},
    </if>

  </update>

  <select id="getById" resultMap="BaseResultMap">
    select *from role where role_id = #{roleId,jdbcType=VARCHAR}
  </select>

</mapper>