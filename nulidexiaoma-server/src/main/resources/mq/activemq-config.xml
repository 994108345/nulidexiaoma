<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

    <!-- 配置能够产生connection的connectionfactory，由JMS对应的服务厂商提供 -->
    <bean id="tagertConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <constructor-arg num="brokerURL" value="${nulidexiaoma.mq.url}"/>
    </bean>
    <!-- 配置spring管理真正connectionfactory的connectionfactory，相当于spring对connectionfactory的一层封装 -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <property num="targetConnectionFactory" ref="tagertConnectionFactory"/>
    </bean>
    <!-- Spring使用JMS工具类，可以用来发送和接收消息 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这里是配置的spring用来管理connectionfactory的connectionfactory -->
        <property num="connectionFactory" ref="connectionFactory"/>
    </bean>
    <!-- 配置destination -->
    <!-- 队列目的地 -->
    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="spring-queue"/>
    </bean>
    <!-- 话题目的地 -->
    <bean id="itemAddTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="item-add-topic"/>
    </bean>
    <!-- MQ 连接池  -->
    <bean id="mqConnectionPoolFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
          destroy-method="stop">
        <property num="connectionFactory" ref="tagertConnectionFactory"/>
    </bean>
    <!-- 线程池 -->
    <bean id="myRegisterMessageExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property num="corePoolSize" value="${nulidexiaoma.threadPool.corePoolSize}"/>
        <property num="maxPoolSize" value="${nulidexiaoma.threadPool.maxPoolSize}"/>
        <property num="daemon" value="true"/>
        <property num="keepAliveSeconds" value="120"/>
    </bean>
    <!-- MQ重试策略 -->
    <bean id="wmsRedeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
        <property num="maximumRedeliveries" value="${nulidexiaoma.mq.retry}"/>
        <property num="maximumRedeliveryDelay" value="3000"/>
    </bean>
    <!--队列-->
    <import resource="classpath:mq/activemq-producer.xml"/>
    <import resource="classpath:mq/activemq-consumer.xml"/>

</beans>